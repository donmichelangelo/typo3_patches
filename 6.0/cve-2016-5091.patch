From 0483cd98dd07153dbb56c980e6faf3ac43fbb620 Mon Sep 17 00:00:00 2001
From: Helmut Hummel <info@helhum.io>
Date: Wed, 18 May 2016 21:36:17 +0200
Subject: [PATCH] [SECURITY] Validate complete referring request

Instead of only checking for valid request arguments by using a hmac,
we now check the complete request including action, controller and vendor
to avoid spoofing these arguments and bypassing other security checks
during forwarding to the referring action.

Additionally, ReferringRequest is now separate from regular Request.
The meaning of properties starting with "@" is only valid for
processing a referring request. To avoid mixed concerns in using
the same Request implementation for regular requests and referring
requests, they are separated now.

Resolves: #76231
Resolves: #76256
Releases: master, 7.6, 6.2
Change-Id: I9ce59fd9df60e84251cc6f75e6b5f032da0b3c64
---
 .../Classes/Mvc/Controller/ActionController.php    |    8 ++-
 typo3/sysext/extbase/Classes/Mvc/Request.php       |   23 +-------
 .../extbase/Classes/Mvc/Web/ReferringRequest.php   |   56 ++++++++++++++++++++
 typo3/sysext/extbase/Classes/Mvc/Web/Request.php   |   30 ++++++++---
 .../fluid/Classes/ViewHelpers/FormViewHelper.php   |   45 ++++++++++++++++
 5 files changed, 132 insertions(+), 30 deletions(-)
 create mode 100644 typo3/sysext/extbase/Classes/Mvc/Web/ReferringRequest.php

diff --git a/typo3/sysext/extbase/Classes/Mvc/Controller/ActionController.php b/typo3/sysext/extbase/Classes/Mvc/Controller/ActionController.php
index cf0940c..02abce7 100644
--- a/typo3/sysext/extbase/Classes/Mvc/Controller/ActionController.php
+++ b/typo3/sysext/extbase/Classes/Mvc/Controller/ActionController.php
@@ -27,6 +27,9 @@ namespace TYPO3\CMS\Extbase\Mvc\Controller;
  *
  *  This copyright notice MUST APPEAR in all copies of the script!
  ***************************************************************/
+
+use TYPO3\CMS\Extbase\Mvc\Web\Request;
+
 /**
  * A multi action controller. This is by far the most common base class for Controllers.
  *
@@ -464,7 +467,10 @@ class ActionController extends \TYPO3\CMS\Extbase\Mvc\Controller\AbstractControl
 			if ($errorFlashMessage !== FALSE) {
 				$this->flashMessageContainer->add($errorFlashMessage, '', \TYPO3\CMS\Core\Messaging\FlashMessage::ERROR);
 			}
-			$referrer = $this->request->getInternalArgument('__referrer');
+			$referrer = NULL;
+			if ($this->request instanceof Request) {
+				$referrer = $this->request->getValidatedReferrerArguments();
+			}
 			if ($referrer !== NULL) {
 				$this->forward($referrer['actionName'], $referrer['controllerName'], $referrer['extensionName'], $this->request->getArguments());
 			}
diff --git a/typo3/sysext/extbase/Classes/Mvc/Request.php b/typo3/sysext/extbase/Classes/Mvc/Request.php
index 1bc0cce..eab7957 100644
--- a/typo3/sysext/extbase/Classes/Mvc/Request.php
+++ b/typo3/sysext/extbase/Classes/Mvc/Request.php
@@ -384,27 +384,8 @@ class Request implements \TYPO3\CMS\Extbase\Mvc\RequestInterface {
 			$this->internalArguments[$argumentName] = $value;
 			return;
 		}
-		switch ($argumentName) {
-			case '@extension':
-				$this->setControllerExtensionName($value);
-				break;
-			case '@subpackage':
-				$this->setControllerSubpackageKey($value);
-				break;
-			case '@controller':
-				$this->setControllerName($value);
-				break;
-			case '@action':
-				$this->setControllerActionName($value);
-				break;
-			case '@format':
-				$this->setFormat($value);
-				break;
-			case '@vendor':
-				$this->setControllerVendorName($value);
-				break;
-			default:
-				$this->arguments[$argumentName] = $value;
+		if (!in_array($argumentName, array('@extension', '@subpackage', '@controller', '@action', '@format', '@vendor'), true)) {
+			$this->arguments[$argumentName] = $value;
 		}
 	}

diff --git a/typo3/sysext/extbase/Classes/Mvc/Web/ReferringRequest.php b/typo3/sysext/extbase/Classes/Mvc/Web/ReferringRequest.php
new file mode 100644
index 0000000..429f967
--- /dev/null
+++ b/typo3/sysext/extbase/Classes/Mvc/Web/ReferringRequest.php
@@ -0,0 +1,56 @@
+<?php
+namespace TYPO3\CMS\Extbase\Mvc\Web;
+
+/*
+ * This file is part of the TYPO3 CMS project.
+ *
+ * It is free software; you can redistribute it and/or modify it under
+ * the terms of the GNU General Public License, either version 2
+ * of the License, or any later version.
+ *
+ * For the full copyright and license information, please read the
+ * LICENSE.txt file that was distributed with this source code.
+ *
+ * The TYPO3 project - inspiring people to share!
+ */
+
+/**
+ * Represents a referring web request.
+ *
+ * @api
+ */
+class ReferringRequest extends Request
+{
+	/**
+	 * Sets the value of the specified argument
+	 *
+	 * @param string $argumentName Name of the argument to set
+	 * @param mixed $value The new value
+	 */
+	public function setArgument($argumentName, $value)
+	{
+		parent::setArgument($argumentName, $value);
+
+		switch ($argumentName) {
+			case '@extension':
+				$this->setControllerExtensionName($value);
+				break;
+			case '@subpackage':
+				$this->setControllerSubpackageKey($value);
+				break;
+			case '@controller':
+				$this->setControllerName($value);
+				break;
+			case '@action':
+				$this->setControllerActionName($value);
+				break;
+			case '@format':
+				$this->setFormat($value);
+				break;
+			case '@vendor':
+				$this->setControllerVendorName($value);
+				break;
+		}
+	}
+
+}
diff --git a/typo3/sysext/extbase/Classes/Mvc/Web/Request.php b/typo3/sysext/extbase/Classes/Mvc/Web/Request.php
index 0b573e8..0427fd4 100644
--- a/typo3/sysext/extbase/Classes/Mvc/Web/Request.php
+++ b/typo3/sysext/extbase/Classes/Mvc/Web/Request.php
@@ -206,21 +206,35 @@ class Request extends \TYPO3\CMS\Extbase\Mvc\Request {
 	 * @return Request the referring request, or NULL if no referrer found
 	 */
 	public function getReferringRequest() {
-		if (isset($this->internalArguments['__referrer']) && is_array($this->internalArguments['__referrer'])) {
-			$referrerArray = $this->internalArguments['__referrer'];
-			$referringRequest = new \TYPO3\CMS\Extbase\Mvc\Web\Request();
+		$referrerArray = $this->getValidatedReferrerArguments();
+		if ($referrerArray !== NULL) {
 			$arguments = array();
-			if (isset($referrerArray['arguments'])) {
-				$serializedArgumentsWithHmac = $referrerArray['arguments'];
-				$serializedArguments = $this->hashService->validateAndStripHmac($serializedArgumentsWithHmac);
-				$arguments = unserialize(base64_decode($serializedArguments));
-				unset($referrerArray['arguments']);
+			if (isset($this->internalArguments['__referrer']['arguments'])) {
+				// This case is kept for compatibility in 7.6 and 6.2, but will be removed in 8
+				$arguments = unserialize(base64_decode($this->hashService->validateAndStripHmac($this->internalArguments['__referrer']['arguments'])));
 			}
+			$referringRequest = new ReferringRequest();
 			$referringRequest->setArguments(\TYPO3\CMS\Extbase\Utility\ArrayUtility::arrayMergeRecursiveOverrule($arguments, $referrerArray));
 			return $referringRequest;
 		}
 		return NULL;
 	}
+
+	/**
+	 * @return array|NULL
+	 * @throws \TYPO3\CMS\Extbase\Security\Exception\InvalidArgumentForHashGenerationException
+	 * @throws \TYPO3\CMS\Extbase\Security\Exception\InvalidHashException
+	 */
+	public function getValidatedReferrerArguments() {
+		if (isset($this->internalArguments['__referrer']['@request'])) {
+			$referrerArguments = unserialize($this->hashService->validateAndStripHmac($this->internalArguments['__referrer']['@request']));
+			if (!is_array($referrerArguments)) {
+				$referrerArguments = NULL;
+			}
+			return $referrerArguments;
+		}
+		return NULL;
+	}
 }

 ?>
\ No newline at end of file
diff --git a/typo3/sysext/fluid/Classes/ViewHelpers/FormViewHelper.php b/typo3/sysext/fluid/Classes/ViewHelpers/FormViewHelper.php
index 61e0a74..48bbfd7 100644
--- a/typo3/sysext/fluid/Classes/ViewHelpers/FormViewHelper.php
+++ b/typo3/sysext/fluid/Classes/ViewHelpers/FormViewHelper.php
@@ -78,6 +78,11 @@ class FormViewHelper extends \TYPO3\CMS\Fluid\ViewHelpers\Form\AbstractFormViewH
 	protected $formActionUriArguments;

 	/**
+	 * @bool
+	 */
+	private $securedReferrerFieldRendered = false;
+
+	/**
 	 * @var \TYPO3\CMS\Extbase\Configuration\ConfigurationManagerInterface
 	 */
 	protected $configurationManager;
@@ -176,6 +181,7 @@ class FormViewHelper extends \TYPO3\CMS\Fluid\ViewHelpers\Form\AbstractFormViewH
 		$content .= $this->renderHiddenIdentityField($this->arguments['object'], $this->getFormObjectName());
 		$content .= $this->renderAdditionalIdentityFields();
 		$content .= $this->renderHiddenReferrerFields();
+		$content .= $this->renderHiddenSecuredReferrerField();
 		$content .= $this->renderRequestHashField();
 		// Render hmac after everything else has been rendered
 		$content .= LF . '</div>' . LF;
@@ -251,6 +257,45 @@ class FormViewHelper extends \TYPO3\CMS\Fluid\ViewHelpers\Form\AbstractFormViewH
 			$result .= '<input type="hidden" name="' . $this->prefixFieldName('__referrer[controllerName]') . '" value="' . $controllerName . '" />' . chr(10);
 			$result .= '<input type="hidden" name="' . $this->prefixFieldName('__referrer[actionName]') . '" value="' . $actionName . '" />' . chr(10);
 		}
+		$result .= $this->renderHiddenSecuredReferrerField();
+		return $result;
+	}
+
+	/**
+	 * Renders hidden form field for secured referrer information about the current controller and action.
+	 *
+	 * This method is called twice, to deal with subclasses of this class in a most compatible way
+	 *
+	 * @return string Hidden field with secured referrer information
+	 */
+	protected function renderHiddenSecuredReferrerField()
+	{
+		if ($this->securedReferrerFieldRendered) {
+			return '';
+		}
+		$request = $this->renderingContext->getControllerContext()->getRequest();
+		$extensionName = $request->getControllerExtensionName();
+		$vendorName = $request->getControllerVendorName();
+		$controllerName = $request->getControllerName();
+		$actionName = $request->getControllerActionName();
+		if ($this->configurationManager->isFeatureEnabled('rewrittenPropertyMapper')) {
+			$actionRequest = array(
+				'@extension' => $extensionName,
+				'@controller' => $controllerName,
+				'@action' => $actionName,
+			);
+			if ($vendorName !== null) {
+				$actionRequest['@vendor'] = $vendorName;
+			}
+		} else {
+			$actionRequest = array(
+				'extensionName' => $extensionName,
+				'controllerName' => $controllerName,
+				'actionName' => $actionName,
+			);
+		}
+		$result = '<input type="hidden" name="' . $this->prefixFieldName('__referrer[@request]') . '" value="' . htmlspecialchars($this->hashService->appendHmac(serialize($actionRequest))) . '" />' . chr(10);
+		$this->securedReferrerFieldRendered = true;
 		return $result;
 	}

--
1.7.10.4
